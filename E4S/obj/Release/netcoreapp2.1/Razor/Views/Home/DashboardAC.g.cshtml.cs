#pragma checksum "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "02ec0967e2d712d32eb056a0ae7395cab70353b2"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_DashboardAC), @"mvc.1.0.view", @"/Views/Home/DashboardAC.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/DashboardAC.cshtml", typeof(AspNetCore.Views_Home_DashboardAC))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 2 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\_ViewImports.cshtml"
using E4S;

#line default
#line hidden
#line 3 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\_ViewImports.cshtml"
using E4S.Models;

#line default
#line hidden
#line 4 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\_ViewImports.cshtml"
using E4S.Models.AccountViewModels;

#line default
#line hidden
#line 5 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\_ViewImports.cshtml"
using E4S.Models.ManageViewModels;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"02ec0967e2d712d32eb056a0ae7395cab70353b2", @"/Views/Home/DashboardAC.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b0d6bd66a948813bdfc09794c8b8e3a2f8caf788", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_DashboardAC : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<E4S.ViewModel.AccountVM.DashboardACViewModel>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Index", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Customer", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("link"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Vendor", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Invoice", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Quote", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            BeginContext(53, 2, true);
            WriteLiteral("\r\n");
            EndContext();
#line 3 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
  
  ViewData["Title"] = "Account Dashboard";
  Layout = "~/Views/Shared/_LayoutAccountInventory.cshtml";

#line default
#line hidden
            BeginContext(167, 1205, true);
            WriteLiteral(@"

<style>
  .body-card {
    margin-left: 2%;
    margin-right: 2%;
    margin-top: 1%;
    margin-bottom: 2%;
  }

  .table-font {
    font-weight: 500;
  }

  .iconstyle {
    font-size: 25px;
    margin-top: 20px;
  }

  .link {
    text-decoration: none;
  }

  #chartdiv {
    width: 100%;
    height: 390px;
  }

  #chartdivs {
    width: 100%;
    height: 500px;
  }

  #chartdive {
    width: 100%;
    height: 500px;
  }

  .picture {
    background: fixed;
  }

    .picture:hover {
      border-radius: 7px;
      box-shadow: 0 0 11px rgba(33,33,33,.2);
      padding: 10px;
    }

      .amcharts-chart-div > a {
    display: none !important;
  }


</style>

<div class=""content"">
  <div class=""row"">
    <div class=""col-md-12"">
      <div class=""card card-stats card-raised"">
        <div class=""card-body"">
          <div class=""row"">
            <div class=""col-md-4"">
              <div class=""statistics"">
                <div class=""info"">
  ");
            WriteLiteral("                <div class=\"icon icon-info\">\r\n                    <i class=\"now-ui-icons users_single-02\"></i>\r\n                  </div>\r\n\r\n                  <h3 class=\"info-title\">");
            EndContext();
            BeginContext(1373, 15, false);
#line 75 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                                    Write(Model.Customers);

#line default
#line hidden
            EndContext();
            BeginContext(1388, 451, true);
            WriteLiteral(@"</h3>
                  <h6 class=""stats-title"">Customers</h6>
                </div>
              </div>
            </div>
            <div class=""col-md-4"">
              <div class=""statistics"">
                <div class=""info"">
                  <div class=""icon icon-success"">
                    <i class=""now-ui-icons business_money-coins""></i>
                  </div>

                  <h3 class=""info-title""><small>₦ </small>");
            EndContext();
            BeginContext(1840, 26, false);
#line 87 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                                                     Write(Model.Sales.ToString("N2"));

#line default
#line hidden
            EndContext();
            BeginContext(1866, 446, true);
            WriteLiteral(@"</h3>
                  <h6 class=""stats-title"">Sales</h6>
                </div>
              </div>
            </div>

            <div class=""col-md-4"">
              <div class=""statistics"">
                <div class=""info"">
                  <div class=""icon icon-danger"">
                    <i class=""now-ui-icons objects_support-17""></i>
                  </div>

                  <h3 class=""info-title""><small>₦ </small>");
            EndContext();
            BeginContext(2313, 29, false);
#line 100 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                                                     Write(Model.Expenses.ToString("N2"));

#line default
#line hidden
            EndContext();
            BeginContext(2342, 676, true);
            WriteLiteral(@"</h3>
                  <h6 class=""stats-title"">Expenses</h6>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div class=""row"">
    <div class=""col-md-6"">
      <div class=""card"">
        <div class=""card-header "">
          <h4 class=""body-card"">Things you can do</h4>



        </div>
        <div class=""card-body "">

          <div class=""row body-card picture"">
            <div class=""icon icon-info col-md-1 iconstyle"">
              <i class=""now-ui-icons emoticons_satisfied""></i>

            </div>

            <div class=""col-md-10"">
              <h5>");
            EndContext();
            BeginContext(3018, 79, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "49e017ada50b4248b03c44570789954a", async() => {
                BeginContext(3079, 14, true);
                WriteLiteral("Add a Customer");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3097, 385, true);
            WriteLiteral(@"</h5>
              <p class=""col-md-12"">A great way to start is to add your customers info.</p>

            </div>

          </div>
          <div class=""row body-card picture"">
            <div class=""icon icon-info col-md-1 iconstyle"">
              <i class=""now-ui-icons clothes_tie-bow""></i>
            </div>

            <div class=""col-md-9"">
              <h5>");
            EndContext();
            BeginContext(3482, 75, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "214d8cadaf8042f1929cf80bc12ca2ec", async() => {
                BeginContext(3541, 12, true);
                WriteLiteral("Add a vendor");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_3.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(3557, 379, true);
            WriteLiteral(@"</h5>
              <p class=""col-md-12"">You dont want to miss out your reliable vendors</p>

            </div>

          </div>
          <div class=""row body-card picture"">
            <div class=""icon icon-info col-md-1 iconstyle"">
              <i class=""now-ui-icons design_vector""></i>
            </div>

            <div class=""col-md-9"">
              <h5>");
            EndContext();
            BeginContext(3936, 81, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "4def1b4f1c0544fabd69f0fbd2a7b739", async() => {
                BeginContext(3996, 17, true);
                WriteLiteral("Create an invoice");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_4.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4017, 406, true);
            WriteLiteral(@"</h5>
              <p class=""col-md-12"">Ready to invoice your clients? Use our easy to use invoice to get started</p>
            </div>

          </div>

          <div class=""row body-card picture"">
            <div class=""icon icon-info col-md-1 iconstyle"">
              <i class=""now-ui-icons design_palette""></i>
            </div>

            <div class=""col-md-9"">
              <h5>");
            EndContext();
            BeginContext(4423, 76, false);
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "895624f57a114058b53ce3c63ab0ed74", async() => {
                BeginContext(4481, 14, true);
                WriteLiteral("Create a quote");
                EndContext();
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_5.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            EndContext();
            BeginContext(4499, 701, true);
            WriteLiteral(@"</h5>
              <p class=""col-md-12"">Now you can make a beautiful, well designed quotes</p>
            </div>

          </div>
        </div>

      </div>
    </div>
    <div class=""col-md-6"">

      <div class=""card card-chart"">
        <div class=""card-header "">
          <h4 class=""body-card"">Expenses Breakdown</h4>
        </div>
        <div class=""card-body"">
          <div id=""chartdiv""></div>
        </div>
      </div>
    </div>

  </div>

  <div class=""row"">
    <div class=""col-md-6"">
      <div class=""card"">
        <div class=""card-header "">
          <h4 class=""body-card"">Profit and Loss</h4>

        </div>
        <div class=""card-body "">
");
            EndContext();
            BeginContext(5314, 380, true);
            WriteLiteral(@"          <div id=""chartdivs""></div>
        </div>

      </div>
    </div>
    <div class=""col-md-6"">

      <div class=""card card-chart"">
        <div class=""card-header "">
          <h4 class=""body-card"">Cash Flow</h4>
        </div>
        <div class=""card-body"">


          <div id=""chartdive""></div>

        </div>
      </div>
    </div>

  </div>
");
            EndContext();
            BeginContext(9934, 580, true);
            WriteLiteral(@"</div>


<!-- Resources -->
<script src=""https://www.amcharts.com/lib/4/core.js""></script>
<script src=""https://www.amcharts.com/lib/4/charts.js""></script>
<script src=""https://www.amcharts.com/lib/4/themes/animated.js""></script>

<!-- Chart code -->
<script>
    am4core.ready(function () {

        // Themes begin
        am4core.useTheme(am4themes_animated);
        // Themes end

        var chart = am4core.create(""chartdiv"", am4charts.PieChart3D);
        chart.hiddenState.properties.opacity = 0; // this creates initial fade-in

      chart.data = [
");
            EndContext();
#line 365 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
           foreach (var item in Model.ExpenseChart)
          {

#line default
#line hidden
            BeginContext(10580, 12, true);
            WriteLiteral("            ");
            EndContext();
            BeginContext(10594, 15, true);
            WriteLiteral("{\r\n            ");
            EndContext();
            BeginContext(10611, 13, true);
            WriteLiteral(" \"country\": \"");
            EndContext();
            BeginContext(10625, 16, false);
#line 368 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                      Write(item.ExpenseName);

#line default
#line hidden
            EndContext();
            BeginContext(10641, 16, true);
            WriteLiteral("\",\r\n            ");
            EndContext();
            BeginContext(10659, 12, true);
            WriteLiteral(" \"litres\" : ");
            EndContext();
            BeginContext(10672, 11, false);
#line 369 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                     Write(item.Amount);

#line default
#line hidden
            EndContext();
            BeginContext(10683, 15, true);
            WriteLiteral(",\r\n            ");
            EndContext();
            BeginContext(10700, 4, true);
            WriteLiteral("},\r\n");
            EndContext();
#line 371 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"

          }

#line default
#line hidden
            BeginContext(10719, 1196, true);
            WriteLiteral(@"        ];

        chart.innerRadius = am4core.percent(40);
        chart.depth = 120;

        chart.legend = new am4charts.Legend();

        var series = chart.series.push(new am4charts.PieSeries3D());
        series.dataFields.value = ""litres"";
        series.dataFields.depthValue = ""litres"";
        series.dataFields.category = ""country"";
        series.slices.template.cornerRadius = 5;
        series.colors.step = 3;

    }); // end am4core.ready()
</script>


<!-- Chart code -->
<script>
    am4core.ready(function () {

        // Themes begin
        am4core.useTheme(am4themes_animated);
        // Themes end

        // Create chart instance
        var chart = am4core.create(""chartdivs"", am4charts.XYChart);

        // Add percent sign to all numbers
      chart.numberFormatter.numberFormat = ""'₦' 000,000"";
      chart.color = [
        ""#FF0000"",
        ""#00FF00"",
        ""#B0DE09"",
        ""#0D8ECF"",
        ""#2A0CD0"",
        ""#CD0D74"",
        ""#CC0000"",
");
            WriteLiteral("        \"#00CC00\",\r\n        \"#0000CC\",\r\n        \"#DDDDDD\",\r\n        \"#999999\",\r\n        \"#333333\",\r\n        \"#990000\"\r\n      ];\r\n        // Add data\r\n      chart.data = [\r\n");
            EndContext();
#line 421 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
         foreach (var item in Model.ProfitLossChart)
        {

#line default
#line hidden
            BeginContext(11980, 10, true);
            WriteLiteral("          ");
            EndContext();
            BeginContext(11992, 13, true);
            WriteLiteral("{\r\n          ");
            EndContext();
            BeginContext(12007, 10, true);
            WriteLiteral("\"month\": \"");
            EndContext();
            BeginContext(12018, 9, false);
#line 424 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                 Write(item.Date);

#line default
#line hidden
            EndContext();
            BeginContext(12027, 14, true);
            WriteLiteral("\",\r\n          ");
            EndContext();
            BeginContext(12043, 12, true);
            WriteLiteral("\"Expenses\": ");
            EndContext();
            BeginContext(12056, 13, false);
#line 425 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                   Write(item.Expenses);

#line default
#line hidden
            EndContext();
            BeginContext(12069, 13, true);
            WriteLiteral(",\r\n          ");
            EndContext();
            BeginContext(12084, 10, true);
            WriteLiteral("\"Income\": ");
            EndContext();
            BeginContext(12095, 11, false);
#line 426 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                 Write(item.Income);

#line default
#line hidden
            EndContext();
            BeginContext(12106, 12, true);
            WriteLiteral("\r\n          ");
            EndContext();
            BeginContext(12120, 4, true);
            WriteLiteral("},\r\n");
            EndContext();
#line 428 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
        }

#line default
#line hidden
            BeginContext(12135, 3093, true);
            WriteLiteral(@"      ];

        // Create axes
        var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
        categoryAxis.dataFields.category = ""month"";
        categoryAxis.renderer.grid.template.location = 0;
        categoryAxis.renderer.minGridDistance = 30;

        var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
        valueAxis.title.text = ""Profit and Loss Report"";
        valueAxis.title.fontWeight = 800;

      chart.colors.list = [
 am4core.color(""#FF0000""),
 am4core.color(""#00FF00"")
];
        // Create series
        var series = chart.series.push(new am4charts.ColumnSeries());
        series.dataFields.valueY = ""Expenses"";
        series.dataFields.categoryX = ""month"";
        series.clustered = false;
        series.tooltipText = ""Expenses in  {categoryX}: [bold]{valueY}[/]"";

        var series2 = chart.series.push(new am4charts.ColumnSeries());
        series2.dataFields.valueY = ""Income"";
        series2.dataFields.categoryX = ""month"";
        s");
            WriteLiteral(@"eries2.clustered = false;
        series2.columns.template.width = am4core.percent(50);
        series2.tooltipText = ""Income in {categoryX}: [bold]{valueY}[/]"";

        chart.cursor = new am4charts.XYCursor();
        chart.cursor.lineX.disabled = true;
        chart.cursor.lineY.disabled = true;

    }); // end am4core.ready()
</script>

<script type=""text/javascript"" src=""https://www.amcharts.com/lib/3/amcharts.js""></script>
<script type=""text/javascript"" src=""https://www.amcharts.com/lib/3/serial.js""></script>

<script type=""text/javascript"">
  AmCharts.makeChart(""chartdivProfitLoss"",
    {
      ""type"": ""serial"",
      ""categoryField"": ""category"",
      ""colors"": [
        ""#FF0000"",
        ""#00FF00"",
        ""#B0DE09"",
        ""#0D8ECF"",
        ""#2A0CD0"",
        ""#CD0D74"",
        ""#CC0000"",
        ""#00CC00"",
        ""#0000CC"",
        ""#DDDDDD"",
        ""#999999"",
        ""#333333"",
        ""#990000""
      ],
      ""startDuration"": 1,
      ""categoryAxis"": {
   ");
            WriteLiteral(@"     ""gridPosition"": ""start""
      },
      ""trendLines"": [],
      ""graphs"": [
        {
          ""balloonText"": ""[[title]] of [[category]]:[[value]]"",
          ""fillAlphas"": 1,
          ""id"": ""AmGraph-1"",
          ""title"": ""graph 1"",
          ""type"": ""column"",
          ""valueField"": ""column-1""
        },
        {
          ""balloonText"": ""[[title]] of [[category]]:[[value]]"",
          ""fillAlphas"": 1,
          ""id"": ""AmGraph-2"",
          ""title"": ""graph 2"",
          ""type"": ""column"",
          ""valueField"": ""column-2""
        }
      ],
      ""guides"": [],
      ""valueAxes"": [
        {
          ""id"": ""ValueAxis-1"",
          ""stackType"": ""regular"",
          ""title"": ""Amount""
        }
      ],
      ""allLabels"": [],
      ""balloon"": {},
      ""legend"": {
        ""enabled"": true,
        ""useGraphSettings"": true
      },
      ""titles"": [
        {
          ""id"": ""Title-1"",
          ""size"": 15,
          ""text"": ""Chart Title""
        }
      ],
      ");
            WriteLiteral("\"dataProvider\": [\r\n\r\n");
            EndContext();
#line 535 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                 foreach (var item in Model.ProfitLossChart)
        {

#line default
#line hidden
            BeginContext(15301, 10, true);
            WriteLiteral("          ");
            EndContext();
            BeginContext(15313, 13, true);
            WriteLiteral("{\r\n          ");
            EndContext();
            BeginContext(15328, 13, true);
            WriteLiteral("\"category\": \"");
            EndContext();
            BeginContext(15342, 9, false);
#line 538 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                    Write(item.Date);

#line default
#line hidden
            EndContext();
            BeginContext(15351, 14, true);
            WriteLiteral("\",\r\n          ");
            EndContext();
            BeginContext(15367, 12, true);
            WriteLiteral("\"column-1\": ");
            EndContext();
            BeginContext(15380, 11, false);
#line 539 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                   Write(item.Income);

#line default
#line hidden
            EndContext();
            BeginContext(15391, 13, true);
            WriteLiteral(",\r\n          ");
            EndContext();
            BeginContext(15406, 12, true);
            WriteLiteral("\"column-2\": ");
            EndContext();
            BeginContext(15419, 13, false);
#line 540 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
                   Write(item.Expenses);

#line default
#line hidden
            EndContext();
            BeginContext(15432, 12, true);
            WriteLiteral("\r\n          ");
            EndContext();
            BeginContext(15446, 4, true);
            WriteLiteral("},\r\n");
            EndContext();
#line 542 "C:\Users\Elijah\source\repos\wBizManager\E4S\Views\Home\DashboardAC.cshtml"
        }

#line default
#line hidden
            BeginContext(15461, 6281, true);
            WriteLiteral(@"
        //{
        //  ""category"": ""category 1"",
        //  ""column-1"": 8,
        //  ""column-2"": 5
        //},
        //{
        //  ""category"": ""category 2"",
        //  ""column-1"": 6,
        //  ""column-2"": 7
        //},
        //{
        //  ""category"": ""category 3"",
        //  ""column-1"": 2,
        //  ""column-2"": 3
        //}
      ]
    }
  );
</script>

<!-- Chart code -->
<script>
  am4core.ready(function () {

    // Themes begin
    am4core.useTheme(am4themes_animated);
    // Themes end

    var chart = am4core.create(""chartdive"", am4charts.XYChart);

    var data = [];

    chart.data = [{
      ""year"": ""2014"",
      ""income"": 23.5,
      ""expenses"": 21.1,
      ""lineColor"": chart.colors.next()
    }, {
      ""year"": ""2015"",
      ""income"": 26.2,
      ""expenses"": 30.5
    }, {
      ""year"": ""2016"",
      ""income"": 30.1,
      ""expenses"": 34.9
    }, {
      ""year"": ""2017"",
      ""income"": 20.5,
      ""expenses"": 23.1
    }, {
     ");
            WriteLiteral(@" ""year"": ""2018"",
      ""income"": 30.6,
      ""expenses"": 28.2,
      ""lineColor"": chart.colors.next()
    }, {
      ""year"": ""2019"",
      ""income"": 34.1,
      ""expenses"": 31.9
    }, {
      ""year"": ""2020"",
      ""income"": 34.1,
      ""expenses"": 31.9
    }, {
      ""year"": ""2021"",
      ""income"": 34.1,
      ""expenses"": 31.9,
      ""lineColor"": chart.colors.next()
    }, {
      ""year"": ""2022"",
      ""income"": 34.1,
      ""expenses"": 31.9
    }, {
      ""year"": ""2023"",
      ""income"": 34.1,
      ""expenses"": 31.9
    }, {
      ""year"": ""2024"",
      ""income"": 34.1,
      ""expenses"": 31.9
    }];

    var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
    categoryAxis.renderer.grid.template.location = 0;
    categoryAxis.renderer.ticks.template.disabled = true;
    categoryAxis.renderer.line.opacity = 0;
    categoryAxis.renderer.grid.template.disabled = true;
    categoryAxis.renderer.minGridDistance = 40;
    categoryAxis.dataFields.category = ""year"";
");
            WriteLiteral(@"    categoryAxis.startLocation = 0.4;
    categoryAxis.endLocation = 0.6;


    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
    valueAxis.tooltip.disabled = true;
    valueAxis.renderer.line.opacity = 0;
    valueAxis.renderer.ticks.template.disabled = true;
    valueAxis.min = 0;

    var lineSeries = chart.series.push(new am4charts.LineSeries());
    lineSeries.dataFields.categoryX = ""year"";
    lineSeries.dataFields.valueY = ""income"";
    lineSeries.tooltipText = ""income: {valueY.value}"";
    lineSeries.fillOpacity = 0.5;
    lineSeries.strokeWidth = 3;
    lineSeries.propertyFields.stroke = ""lineColor"";
    lineSeries.propertyFields.fill = ""lineColor"";

    var bullet = lineSeries.bullets.push(new am4charts.CircleBullet());
    bullet.circle.radius = 6;
    bullet.circle.fill = am4core.color(""#fff"");
    bullet.circle.strokeWidth = 3;

    chart.cursor = new am4charts.XYCursor();
    chart.cursor.behavior = ""panX"";
    chart.cursor.lineX.opacity = 0;
    chart.c");
            WriteLiteral(@"ursor.lineY.opacity = 0;

    chart.scrollbarX = new am4core.Scrollbar();
    chart.scrollbarX.parent = chart.bottomAxesContainer;

  }); // end am4core.ready()
</script>


<!-- Chart code -->
<script>
  am4core.ready(function () {

    // Themes begin
    am4core.useTheme(am4themes_animated);
    // Themes end

    // Create chart instance
    var chart = am4core.create(""chartdive"", am4charts.XYChart);

    // Add data
    chart.data = [{
      ""year"": ""1930"",
      ""italy"": 1,
      ""germany"": 5,
      ""uk"": 3
    }, {
      ""year"": ""1934"",
      ""italy"": 1,
      ""germany"": 2,
      ""uk"": 6
    }, {
      ""year"": ""1938"",
      ""italy"": 2,
      ""germany"": 3,
      ""uk"": 1
    }, {
      ""year"": ""1950"",
      ""italy"": 3,
      ""germany"": 4,
      ""uk"": 1
    }, {
      ""year"": ""1954"",
      ""italy"": 5,
      ""germany"": 1,
      ""uk"": 2
    }, {
      ""year"": ""1958"",
      ""italy"": 3,
      ""germany"": 2,
      ""uk"": 1
    }, {
      ""year"": ""1962"",
      """);
            WriteLiteral(@"italy"": 1,
      ""germany"": 2,
      ""uk"": 3
    }, {
      ""year"": ""1966"",
      ""italy"": 2,
      ""germany"": 1,
      ""uk"": 5
    }, {
      ""year"": ""1970"",
      ""italy"": 3,
      ""germany"": 5,
      ""uk"": 2
    }, {
      ""year"": ""1974"",
      ""italy"": 4,
      ""germany"": 3,
      ""uk"": 6
    }, {
      ""year"": ""1978"",
      ""italy"": 1,
      ""germany"": 2,
      ""uk"": 4
    }];

    // Create category axis
    var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
    categoryAxis.dataFields.category = ""year"";


    // Create value axis
    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
    valueAxis.renderer.inversed = true;
    valueAxis.title.text = ""Cash Flow"";
    valueAxis.renderer.minLabelPosition = 0.01;

    // Create series
    var series1 = chart.series.push(new am4charts.LineSeries());
    series1.dataFields.valueY = ""italy"";
    series1.dataFields.categoryX = ""year"";
    series1.name = ""Inflow"";
    series1.strokeWidth = 3;
 ");
            WriteLiteral(@"   series1.bullets.push(new am4charts.CircleBullet());
    series1.tooltipText = ""Cash {name}: {valueY}"";
    series1.legendSettings.valueText = ""{valueY}"";
    series1.visible = false;

    var series2 = chart.series.push(new am4charts.LineSeries());
    series2.dataFields.valueY = ""germany"";
    series2.dataFields.categoryX = ""year"";
    series2.name = 'Outflow';
    series2.strokeWidth = 3;
    series2.bullets.push(new am4charts.CircleBullet());
    series2.tooltipText = ""Cash {name}: {valueY}"";
    series2.legendSettings.valueText = ""{valueY}"";

    var series3 = chart.series.push(new am4charts.LineSeries());
    series3.dataFields.valueY = ""uk"";
    series3.dataFields.categoryX = ""year"";
    series3.name = 'Net Change';
    series3.strokeWidth = 3;
    series3.bullets.push(new am4charts.CircleBullet());
    series3.tooltipText = ""Cash {name}: {valueY}"";
    series3.legendSettings.valueText = ""{valueY}"";

    // Add chart cursor
    chart.cursor = new am4charts.XYCursor();
    cha");
            WriteLiteral("rt.cursor.behavior = \"zoomY\";\r\n\r\n    // Add legend\r\n    chart.legend = new am4charts.Legend();\r\n\r\n  }); // end am4core.ready()\r\n</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<E4S.ViewModel.AccountVM.DashboardACViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
